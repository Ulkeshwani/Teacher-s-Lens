[{"D:\\React\\Teacher's Lens\\Client\\src\\index.tsx":"1","D:\\React\\Teacher's Lens\\Client\\src\\Components\\App.tsx":"2","D:\\React\\Teacher's Lens\\Client\\src\\Components\\CreateRoom\\CreateRoom.tsx":"3","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Sign-Up Page\\SignupPage.page.tsx":"4","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Landing Page\\Landing.page.tsx":"5","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Meeting Page\\MeetPage.pages.tsx":"6","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Footer\\Footer.component.tsx":"7","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Signup\\Signup.component.tsx":"8","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Room\\Room.tsx":"9","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Login\\Login.component.tsx":"10","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Nav bar\\Navigation.component.tsx":"11","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\LandingPoster.animation.tsx":"12","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\SignupPoster.animation.tsx":"13","D:\\React\\Teacher's Lens\\Client\\src\\Components\\CustomButton\\CustomButton.component.tsx":"14","D:\\React\\Teacher's Lens\\Client\\src\\Components\\ChatSidebar\\Chat.component.tsx":"15","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Video\\index.tsx":"16","D:\\React\\Teacher's Lens\\Client\\src\\Helpers\\Helpers.ts":"17","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Home Page\\Home.component.tsx":"18","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\Navigator.tsx":"19","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Header\\Header.tsx":"20","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\Content.tsx":"21","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\sidebarConfig.js":"22","D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\NavSection.js":"23","D:\\React\\Teacher's Lens\\Client\\src\\Hooks\\useResponsive.js":"24","D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\Iconify.js":"25"},{"size":458,"mtime":1630683597703,"results":"26","hashOfConfig":"27"},{"size":815,"mtime":1648902305091,"results":"28","hashOfConfig":"27"},{"size":349,"mtime":1635405346160,"results":"29","hashOfConfig":"27"},{"size":805,"mtime":1631864039743,"results":"30","hashOfConfig":"27"},{"size":802,"mtime":1631865791438,"results":"31","hashOfConfig":"27"},{"size":599,"mtime":1635840578148,"results":"32","hashOfConfig":"27"},{"size":404,"mtime":1631890406730,"results":"33","hashOfConfig":"27"},{"size":2107,"mtime":1648901481462,"results":"34","hashOfConfig":"27"},{"size":8711,"mtime":1635922467535,"results":"35","hashOfConfig":"27"},{"size":1832,"mtime":1631895239670,"results":"36","hashOfConfig":"27"},{"size":1600,"mtime":1631863632688,"results":"37","hashOfConfig":"27"},{"size":507,"mtime":1631612719308,"results":"38","hashOfConfig":"27"},{"size":492,"mtime":1632213302757,"results":"39","hashOfConfig":"27"},{"size":343,"mtime":1635494388014,"results":"40","hashOfConfig":"27"},{"size":4177,"mtime":1635923599943,"results":"41","hashOfConfig":"27"},{"size":720,"mtime":1635841880144,"results":"42","hashOfConfig":"27"},{"size":394,"mtime":1635495985182,"results":"43","hashOfConfig":"27"},{"size":4966,"mtime":1648909304227,"results":"44","hashOfConfig":"27"},{"size":3464,"mtime":1648909356078,"results":"45","hashOfConfig":"27"},{"size":3801,"mtime":1648909508878,"results":"46","hashOfConfig":"27"},{"size":2001,"mtime":1648903026317,"results":"47","hashOfConfig":"27"},{"size":374,"mtime":1648907758333,"results":"48","hashOfConfig":"27"},{"size":5057,"mtime":1648910252690,"results":"49","hashOfConfig":"27"},{"size":816,"mtime":1648905960645,"results":"50","hashOfConfig":"27"},{"size":472,"mtime":1648905762257,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1bfvjp8",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\React\\Teacher's Lens\\Client\\src\\index.tsx",[],["107","108"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\App.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\CreateRoom\\CreateRoom.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Sign-Up Page\\SignupPage.page.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Landing Page\\Landing.page.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Meeting Page\\MeetPage.pages.tsx",["109"],"import * as React from \"react\";\r\nimport { ChatNavigation } from \"Components/ChatSidebar/Chat.component\";\r\nimport Room from \"Components/Room/Room\";\r\n\r\nimport \"./MeetPage.styles.css\";\r\n\r\ntype UserCallProps = {\r\n  roomID?: string;\r\n};\r\n\r\nclass MeetPage extends React.Component<UserCallProps> {\r\n  state: UserCallProps = {\r\n    roomID: this.props.roomID,\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"Meet_Wrapper\">\r\n        <div className=\"Meet_callContainer\">\r\n          <Room roomID={this.state.roomID} />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MeetPage;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Footer\\Footer.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Signup\\Signup.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Room\\Room.tsx",["110","111","112","113"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Video from \"Components/Video\";\r\n\r\nimport \"./Room.styles.css\";\r\nimport { ChatNavigation } from \"Components/ChatSidebar/Chat.component\";\r\n\r\ntype CallProperties = {\r\n  roomID?: string;\r\n};\r\n\r\nconst Room = ({ roomID }: CallProperties) => {\r\n  const localUuid: string = roomID as string;\r\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\r\n  const [users, setUsers] = useState<Array<IWebRTCUser>>([]);\r\n  const senders = useRef<Array<RTCRtpSender>>([]);\r\n  const [Hide, setHide] = useState(false);\r\n  const [mic, setMic] = useState(false);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n\r\n  const handleVideo = () => {\r\n    setIsVideoOn(!isVideoOn);\r\n  };\r\n\r\n  const handleMic = () => {\r\n    setIsVideoOn(!mic);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setHide(!Hide);\r\n  };\r\n\r\n  let localVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  let sendPC: RTCPeerConnection;\r\n  let receivePCs: { [socketId: string]: RTCPeerConnection };\r\n  let localStream: MediaStream;\r\n\r\n  const pc_config = {\r\n    iceServers: [\r\n      {\r\n        urls: \"stun:stun.l.google.com:19302\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newSocket = io.connect(\"ws://localhost:8080\");\r\n\r\n    newSocket.on(\"userEnter\", (data: { id: string }) => {\r\n      createReceivePC(data.id, newSocket);\r\n    });\r\n\r\n    newSocket.on(\"allUsers\", (data: { users: Array<{ id: string }> }) => {\r\n      let len = data.users.length;\r\n      for (let i = 0; i < len; i++) {\r\n        createReceivePC(data.users[i].id, newSocket);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"userExit\", (data: { id: string }) => {\r\n      receivePCs[data.id].close();\r\n      delete receivePCs[data.id];\r\n      setUsers((users) => users.filter((user) => user.id !== data.id));\r\n    });\r\n\r\n    newSocket.on(\r\n      \"getSenderAnswer\",\r\n      async (data: { sdp: RTCSessionDescription }) => {\r\n        try {\r\n          console.log(\"get sender answer\");\r\n          console.log(data.sdp);\r\n          await sendPC.setRemoteDescription(\r\n            new RTCSessionDescription(data.sdp)\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getSenderCandidate\",\r\n      async (data: { candidate: RTCIceCandidateInit }) => {\r\n        try {\r\n          console.log(\"get sender candidate\");\r\n          if (!data.candidate) return;\r\n          sendPC.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          console.log(\"candidate add success\");\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getReceiverAnswer\",\r\n      async (data: { id: string; sdp: RTCSessionDescription }) => {\r\n        try {\r\n          console.log(`get socketID(${data.id})'s answer`);\r\n          let pc: RTCPeerConnection = receivePCs[data.id];\r\n          await pc.setRemoteDescription(data.sdp);\r\n          console.log(`socketID(${data.id})'s set remote sdp success`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getReceiverCandidate\",\r\n      async (data: { id: string; candidate: RTCIceCandidateInit }) => {\r\n        try {\r\n          console.log(data);\r\n          console.log(`get socketID(${data.id})'s candidate`);\r\n          let pc: RTCPeerConnection = receivePCs[data.id];\r\n          if (!data.candidate) return;\r\n          pc.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          console.log(`socketID(${data.id})'s candidate add success`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    setSocket(newSocket);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        audio: mic,\r\n        video: isVideoOn\r\n          ? {\r\n              width: { min: 640, ideal: 1280, max: 1920 },\r\n              height: { min: 480, ideal: 720, max: 1080 },\r\n              frameRate: { max: 59 },\r\n            }\r\n          : false,\r\n      })\r\n      .then((stream) => {\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n\r\n        localStream = stream;\r\n\r\n        sendPC = createSenderPeerConnection(newSocket, localStream);\r\n        createSenderOffer(newSocket);\r\n\r\n        newSocket.emit(\"joinRoom\", {\r\n          id: newSocket.id,\r\n          roomID: localUuid,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`getUserMedia error: ${error}`);\r\n      });\r\n  }, []);\r\n\r\n  const createReceivePC = (id: string, newSocket: SocketIOClient.Socket) => {\r\n    try {\r\n      console.log(`socketID(${id}) user entered`);\r\n      let pc = createReceiverPeerConnection(id, newSocket);\r\n      createReceiverOffer(pc, newSocket, id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //Create Offer\r\n  const createSenderOffer = async (newSocket: SocketIOClient.Socket) => {\r\n    try {\r\n      let sdp = await sendPC.createOffer({\r\n        offerToReceiveAudio: false,\r\n        offerToReceiveVideo: false,\r\n      });\r\n      console.log(\"create sender offer success\");\r\n      await sendPC.setLocalDescription(new RTCSessionDescription(sdp));\r\n\r\n      newSocket.emit(\"senderOffer\", {\r\n        sdp,\r\n        senderSocketID: newSocket.id,\r\n        roomID: localUuid,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createReceiverOffer = async (\r\n    pc: RTCPeerConnection,\r\n    newSocket: SocketIOClient.Socket,\r\n    senderSocketID: string\r\n  ) => {\r\n    try {\r\n      let sdp = await pc.createOffer({\r\n        offerToReceiveAudio: true,\r\n        offerToReceiveVideo: true,\r\n      });\r\n      console.log(\"create receiver offer success\");\r\n      await pc.setLocalDescription(new RTCSessionDescription(sdp));\r\n\r\n      newSocket.emit(\"receiverOffer\", {\r\n        sdp,\r\n        receiverSocketID: newSocket.id,\r\n        senderSocketID,\r\n        roomID: localUuid,\r\n      });\r\n      console.log(senderSocketID);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //callUser\r\n  const createSenderPeerConnection = (\r\n    newSocket: SocketIOClient.Socket,\r\n    localStream: MediaStream\r\n  ): RTCPeerConnection => {\r\n    let pc = new RTCPeerConnection(pc_config);\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log(\"sender PC onicecandidate\");\r\n        newSocket.emit(\"senderCandidate\", {\r\n          candidate: e.candidate,\r\n          senderSocketID: newSocket.id,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    if (localStream) {\r\n      console.log(\"localstream add\");\r\n      localStream.getTracks().forEach((track) => {\r\n        senders.current.push(pc.addTrack(track, localStream));\r\n      });\r\n    } else {\r\n      console.log(\"no local stream\");\r\n    }\r\n    // return pc\r\n    return pc;\r\n  };\r\n\r\n  const createReceiverPeerConnection = (\r\n    socketID: string,\r\n    newSocket: SocketIOClient.Socket\r\n  ): RTCPeerConnection => {\r\n    let pc = new RTCPeerConnection(pc_config);\r\n\r\n    // add pc to peerConnections object\r\n    receivePCs = { ...receivePCs, [socketID]: pc };\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log(\"receiver PC onicecandidate\");\r\n        newSocket.emit(\"receiverCandidate\", {\r\n          candidate: e.candidate,\r\n          receiverSocketID: newSocket.id,\r\n          senderSocketID: socketID,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    pc.ontrack = (e) => {\r\n      console.log(\"ontrack success\");\r\n      setUsers((oldUsers) => oldUsers.filter((user) => user.id !== socketID));\r\n      setUsers((oldUsers) => [\r\n        ...oldUsers,\r\n        {\r\n          id: socketID,\r\n          stream: e.streams[0],\r\n        },\r\n      ]);\r\n    };\r\n\r\n    // return pc\r\n    return pc;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"Video_wrapper\">\r\n        {console.log(users.length)}\r\n        <div className=\"Video_Host_Container\">\r\n          {/* <div className=\"video-overlay \"> The Attendee Name </div> */}\r\n          <video muted={mic} ref={localVideoRef} autoPlay></video>\r\n          {users.length > 0\r\n            ? users.map((user, index) => {\r\n                return <Video key={index} stream={user.stream} muted={mic} />;\r\n              })\r\n            : null}\r\n        </div>\r\n      </section>\r\n      <ChatNavigation\r\n        senders={senders}\r\n        setHide={handleClose}\r\n        Hide={Hide}\r\n        micMuted={mic}\r\n        setMicMuted={handleMic}\r\n        checkVideo={isVideoOn}\r\n        setCheckVideo={handleVideo}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Login\\Login.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Nav bar\\Navigation.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\LandingPoster.animation.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\SignupPoster.animation.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\CustomButton\\CustomButton.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\ChatSidebar\\Chat.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Video\\index.tsx",["114","115"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\ninterface Props {\r\n  stream: MediaStream;\r\n  muted?: boolean;\r\n}\r\n\r\nconst Video = ({ stream, muted }: Props) => {\r\n  const ref = useRef<HTMLVideoElement>(null);\r\n  const [isMuted, setIsMuted] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) ref.current.srcObject = stream;\r\n    if (muted) setIsMuted(muted);\r\n  });\r\n\r\n  return (\r\n    // <div className=\"outerContainer\">\r\n    //   <div className=\"innerContainer\">\r\n    //     <div className=\"peerVideoOverlay\">Attendee Name</div>\r\n    <video ref={ref} muted={false} autoPlay controls></video>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Helpers\\Helpers.ts",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Home Page\\Home.component.tsx",["116","117"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\Navigator.tsx",["118"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Header\\Header.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\Content.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\sidebarConfig.js",[],["119","120"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\NavSection.js",["121"],"D:\\React\\Teacher's Lens\\Client\\src\\Hooks\\useResponsive.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\Iconify.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":24},{"ruleId":"126","severity":1,"message":"130","line":14,"column":10,"nodeType":"128","messageId":"129","endLine":14,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":18,"column":15,"nodeType":"128","messageId":"129","endLine":18,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":142,"column":23,"nodeType":"128","endLine":142,"endColumn":29},{"ruleId":"132","severity":1,"message":"134","line":144,"column":18,"nodeType":"135","endLine":144,"endColumn":68},{"ruleId":"126","severity":1,"message":"136","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":17},{"ruleId":"132","severity":1,"message":"137","line":13,"column":3,"nodeType":"128","endLine":13,"endColumn":12,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"139","line":174,"column":10,"nodeType":"128","messageId":"129","endLine":174,"endColumn":20},{"ruleId":"126","severity":1,"message":"140","line":174,"column":22,"nodeType":"128","messageId":"129","endLine":174,"endColumn":35},{"ruleId":"126","severity":1,"message":"141","line":9,"column":3,"nodeType":"128","messageId":"129","endLine":9,"endColumn":9},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"142","severity":1,"message":"143","line":63,"column":9,"nodeType":"128","messageId":"129","endLine":63,"endColumn":14},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"@typescript-eslint/no-unused-vars","'ChatNavigation' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","'setMic' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'localStream' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'sendPC' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'isMuted' is assigned a value but never used.","React Hook useEffect contains a call to 'setIsMuted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stream, muted] as a second argument to the useEffect Hook.",["146"],"'mobileOpen' is assigned a value but never used.","'setMobileOpen' is assigned a value but never used.","'Button' is defined but never used.","no-unused-vars","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Add dependencies array: [stream, muted]",{"range":"149","text":"150"},[422,422],", [stream, muted]"]