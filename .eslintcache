[{"D:\\React\\Teacher's Lens\\Client\\src\\index.tsx":"1","D:\\React\\Teacher's Lens\\Client\\src\\Components\\App.tsx":"2","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Sign-Up Page\\SignupPage.page.tsx":"3","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Landing Page\\Landing.page.tsx":"4","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Meeting Page\\MeetPage.pages.tsx":"5","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Footer\\Footer.component.tsx":"6","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Signup\\Signup.component.tsx":"7","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Room\\Room.tsx":"8","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Login\\Login.component.tsx":"9","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Nav bar\\Navigation.component.tsx":"10","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\LandingPoster.animation.tsx":"11","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\SignupPoster.animation.tsx":"12","D:\\React\\Teacher's Lens\\Client\\src\\Components\\CustomButton\\CustomButton.component.tsx":"13","D:\\React\\Teacher's Lens\\Client\\src\\Components\\ChatSidebar\\Chat.component.tsx":"14","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Video\\index.tsx":"15","D:\\React\\Teacher's Lens\\Client\\src\\Helpers\\Helpers.ts":"16","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Home Page\\Home.component.tsx":"17","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\Navigator.tsx":"18","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Header\\Header.tsx":"19","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\sidebarConfig.js":"20","D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\NavSection.js":"21","D:\\React\\Teacher's Lens\\Client\\src\\Hooks\\useResponsive.js":"22","D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\Iconify.js":"23","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Custom Model\\Model.component.tsx":"24","D:\\React\\Teacher's Lens\\Client\\src\\utils\\theme.js":"25","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Create Conversation\\Conversation.page.jsx":"26","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Page.jsx":"27","D:\\React\\Teacher's Lens\\Client\\src\\utils\\Constants.js":"28","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Announcement\\Announcement.component.tsx":"29","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Announcement & Notification\\Announcement.page.jsx":"30","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Serverity-pills\\ServerityPills.component.jsx":"31","D:\\React\\Teacher's Lens\\Client\\src\\Components\\CreateRoom\\CreateRoom.tsx":"32","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\User\\User.page.jsx":"33","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\User\\UserInput.component.jsx":"34","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\UserContent.jsx":"35","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\School\\School.page.jsx":"36","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\SchoolContent.jsx":"37","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\School\\SchoolInput.component.jsx":"38","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\Organisation\\Organisation.page.jsx":"39","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\OrganisationContent.jsx":"40","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\Organisation\\OrganisationInput.component.jsx":"41","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Profile\\Profile.jsx":"42","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\ProfileContent.jsx":"43"},{"size":458,"mtime":1630683597703,"results":"44","hashOfConfig":"45"},{"size":2219,"mtime":1649357160523,"results":"46","hashOfConfig":"45"},{"size":805,"mtime":1631864039743,"results":"47","hashOfConfig":"45"},{"size":802,"mtime":1631865791438,"results":"48","hashOfConfig":"45"},{"size":599,"mtime":1635840578148,"results":"49","hashOfConfig":"45"},{"size":404,"mtime":1631890406730,"results":"50","hashOfConfig":"45"},{"size":2107,"mtime":1648901481462,"results":"51","hashOfConfig":"45"},{"size":8711,"mtime":1635922467535,"results":"52","hashOfConfig":"45"},{"size":2103,"mtime":1648964523130,"results":"53","hashOfConfig":"45"},{"size":1480,"mtime":1649357152255,"results":"54","hashOfConfig":"45"},{"size":507,"mtime":1631612719308,"results":"55","hashOfConfig":"45"},{"size":492,"mtime":1632213302757,"results":"56","hashOfConfig":"45"},{"size":417,"mtime":1648964467510,"results":"57","hashOfConfig":"45"},{"size":4177,"mtime":1635923599943,"results":"58","hashOfConfig":"45"},{"size":720,"mtime":1635841880144,"results":"59","hashOfConfig":"45"},{"size":394,"mtime":1635495985182,"results":"60","hashOfConfig":"45"},{"size":1801,"mtime":1649354736210,"results":"61","hashOfConfig":"45"},{"size":3827,"mtime":1649351827553,"results":"62","hashOfConfig":"45"},{"size":3444,"mtime":1649343768266,"results":"63","hashOfConfig":"45"},{"size":2007,"mtime":1649356800613,"results":"64","hashOfConfig":"45"},{"size":4949,"mtime":1649096347904,"results":"65","hashOfConfig":"45"},{"size":816,"mtime":1648905960645,"results":"66","hashOfConfig":"45"},{"size":472,"mtime":1648905762257,"results":"67","hashOfConfig":"45"},{"size":1032,"mtime":1649090408726,"results":"68","hashOfConfig":"45"},{"size":3129,"mtime":1649351718349,"results":"69","hashOfConfig":"45"},{"size":1456,"mtime":1649101466872,"results":"70","hashOfConfig":"45"},{"size":560,"mtime":1649098550438,"results":"71","hashOfConfig":"45"},{"size":60,"mtime":1649351211406,"results":"72","hashOfConfig":"45"},{"size":1106,"mtime":1649354576745,"results":"73","hashOfConfig":"45"},{"size":1786,"mtime":1649101221580,"results":"74","hashOfConfig":"45"},{"size":1282,"mtime":1649100712995,"results":"75","hashOfConfig":"45"},{"size":349,"mtime":1649101888493,"results":"76","hashOfConfig":"45"},{"size":3497,"mtime":1649354127021,"results":"77","hashOfConfig":"45"},{"size":6587,"mtime":1649350769277,"results":"78","hashOfConfig":"45"},{"size":2627,"mtime":1649351850580,"results":"79","hashOfConfig":"45"},{"size":3349,"mtime":1649354863598,"results":"80","hashOfConfig":"45"},{"size":2695,"mtime":1649353781457,"results":"81","hashOfConfig":"45"},{"size":4471,"mtime":1649353409600,"results":"82","hashOfConfig":"45"},{"size":3250,"mtime":1649355194256,"results":"83","hashOfConfig":"45"},{"size":2712,"mtime":1649355477456,"results":"84","hashOfConfig":"45"},{"size":3184,"mtime":1649355103190,"results":"85","hashOfConfig":"45"},{"size":1911,"mtime":1649356527632,"results":"86","hashOfConfig":"45"},{"size":1472,"mtime":1649356772444,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1bfvjp8",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"136"},"D:\\React\\Teacher's Lens\\Client\\src\\index.tsx",[],["192","193"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\App.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Sign-Up Page\\SignupPage.page.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Landing Page\\Landing.page.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Meeting Page\\MeetPage.pages.tsx",["194"],"import * as React from \"react\";\r\nimport { ChatNavigation } from \"Components/ChatSidebar/Chat.component\";\r\nimport Room from \"Components/Room/Room\";\r\n\r\nimport \"./MeetPage.styles.css\";\r\n\r\ntype UserCallProps = {\r\n  roomID?: string;\r\n};\r\n\r\nclass MeetPage extends React.Component<UserCallProps> {\r\n  state: UserCallProps = {\r\n    roomID: this.props.roomID,\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"Meet_Wrapper\">\r\n        <div className=\"Meet_callContainer\">\r\n          <Room roomID={this.state.roomID} />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MeetPage;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Footer\\Footer.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Signup\\Signup.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Room\\Room.tsx",["195","196","197","198"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Video from \"Components/Video\";\r\n\r\nimport \"./Room.styles.css\";\r\nimport { ChatNavigation } from \"Components/ChatSidebar/Chat.component\";\r\n\r\ntype CallProperties = {\r\n  roomID?: string;\r\n};\r\n\r\nconst Room = ({ roomID }: CallProperties) => {\r\n  const localUuid: string = roomID as string;\r\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\r\n  const [users, setUsers] = useState<Array<IWebRTCUser>>([]);\r\n  const senders = useRef<Array<RTCRtpSender>>([]);\r\n  const [Hide, setHide] = useState(false);\r\n  const [mic, setMic] = useState(false);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n\r\n  const handleVideo = () => {\r\n    setIsVideoOn(!isVideoOn);\r\n  };\r\n\r\n  const handleMic = () => {\r\n    setIsVideoOn(!mic);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setHide(!Hide);\r\n  };\r\n\r\n  let localVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  let sendPC: RTCPeerConnection;\r\n  let receivePCs: { [socketId: string]: RTCPeerConnection };\r\n  let localStream: MediaStream;\r\n\r\n  const pc_config = {\r\n    iceServers: [\r\n      {\r\n        urls: \"stun:stun.l.google.com:19302\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newSocket = io.connect(\"ws://localhost:8080\");\r\n\r\n    newSocket.on(\"userEnter\", (data: { id: string }) => {\r\n      createReceivePC(data.id, newSocket);\r\n    });\r\n\r\n    newSocket.on(\"allUsers\", (data: { users: Array<{ id: string }> }) => {\r\n      let len = data.users.length;\r\n      for (let i = 0; i < len; i++) {\r\n        createReceivePC(data.users[i].id, newSocket);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"userExit\", (data: { id: string }) => {\r\n      receivePCs[data.id].close();\r\n      delete receivePCs[data.id];\r\n      setUsers((users) => users.filter((user) => user.id !== data.id));\r\n    });\r\n\r\n    newSocket.on(\r\n      \"getSenderAnswer\",\r\n      async (data: { sdp: RTCSessionDescription }) => {\r\n        try {\r\n          console.log(\"get sender answer\");\r\n          console.log(data.sdp);\r\n          await sendPC.setRemoteDescription(\r\n            new RTCSessionDescription(data.sdp)\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getSenderCandidate\",\r\n      async (data: { candidate: RTCIceCandidateInit }) => {\r\n        try {\r\n          console.log(\"get sender candidate\");\r\n          if (!data.candidate) return;\r\n          sendPC.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          console.log(\"candidate add success\");\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getReceiverAnswer\",\r\n      async (data: { id: string; sdp: RTCSessionDescription }) => {\r\n        try {\r\n          console.log(`get socketID(${data.id})'s answer`);\r\n          let pc: RTCPeerConnection = receivePCs[data.id];\r\n          await pc.setRemoteDescription(data.sdp);\r\n          console.log(`socketID(${data.id})'s set remote sdp success`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getReceiverCandidate\",\r\n      async (data: { id: string; candidate: RTCIceCandidateInit }) => {\r\n        try {\r\n          console.log(data);\r\n          console.log(`get socketID(${data.id})'s candidate`);\r\n          let pc: RTCPeerConnection = receivePCs[data.id];\r\n          if (!data.candidate) return;\r\n          pc.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          console.log(`socketID(${data.id})'s candidate add success`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    setSocket(newSocket);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        audio: mic,\r\n        video: isVideoOn\r\n          ? {\r\n              width: { min: 640, ideal: 1280, max: 1920 },\r\n              height: { min: 480, ideal: 720, max: 1080 },\r\n              frameRate: { max: 59 },\r\n            }\r\n          : false,\r\n      })\r\n      .then((stream) => {\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n\r\n        localStream = stream;\r\n\r\n        sendPC = createSenderPeerConnection(newSocket, localStream);\r\n        createSenderOffer(newSocket);\r\n\r\n        newSocket.emit(\"joinRoom\", {\r\n          id: newSocket.id,\r\n          roomID: localUuid,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`getUserMedia error: ${error}`);\r\n      });\r\n  }, []);\r\n\r\n  const createReceivePC = (id: string, newSocket: SocketIOClient.Socket) => {\r\n    try {\r\n      console.log(`socketID(${id}) user entered`);\r\n      let pc = createReceiverPeerConnection(id, newSocket);\r\n      createReceiverOffer(pc, newSocket, id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //Create Offer\r\n  const createSenderOffer = async (newSocket: SocketIOClient.Socket) => {\r\n    try {\r\n      let sdp = await sendPC.createOffer({\r\n        offerToReceiveAudio: false,\r\n        offerToReceiveVideo: false,\r\n      });\r\n      console.log(\"create sender offer success\");\r\n      await sendPC.setLocalDescription(new RTCSessionDescription(sdp));\r\n\r\n      newSocket.emit(\"senderOffer\", {\r\n        sdp,\r\n        senderSocketID: newSocket.id,\r\n        roomID: localUuid,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createReceiverOffer = async (\r\n    pc: RTCPeerConnection,\r\n    newSocket: SocketIOClient.Socket,\r\n    senderSocketID: string\r\n  ) => {\r\n    try {\r\n      let sdp = await pc.createOffer({\r\n        offerToReceiveAudio: true,\r\n        offerToReceiveVideo: true,\r\n      });\r\n      console.log(\"create receiver offer success\");\r\n      await pc.setLocalDescription(new RTCSessionDescription(sdp));\r\n\r\n      newSocket.emit(\"receiverOffer\", {\r\n        sdp,\r\n        receiverSocketID: newSocket.id,\r\n        senderSocketID,\r\n        roomID: localUuid,\r\n      });\r\n      console.log(senderSocketID);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //callUser\r\n  const createSenderPeerConnection = (\r\n    newSocket: SocketIOClient.Socket,\r\n    localStream: MediaStream\r\n  ): RTCPeerConnection => {\r\n    let pc = new RTCPeerConnection(pc_config);\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log(\"sender PC onicecandidate\");\r\n        newSocket.emit(\"senderCandidate\", {\r\n          candidate: e.candidate,\r\n          senderSocketID: newSocket.id,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    if (localStream) {\r\n      console.log(\"localstream add\");\r\n      localStream.getTracks().forEach((track) => {\r\n        senders.current.push(pc.addTrack(track, localStream));\r\n      });\r\n    } else {\r\n      console.log(\"no local stream\");\r\n    }\r\n    // return pc\r\n    return pc;\r\n  };\r\n\r\n  const createReceiverPeerConnection = (\r\n    socketID: string,\r\n    newSocket: SocketIOClient.Socket\r\n  ): RTCPeerConnection => {\r\n    let pc = new RTCPeerConnection(pc_config);\r\n\r\n    // add pc to peerConnections object\r\n    receivePCs = { ...receivePCs, [socketID]: pc };\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log(\"receiver PC onicecandidate\");\r\n        newSocket.emit(\"receiverCandidate\", {\r\n          candidate: e.candidate,\r\n          receiverSocketID: newSocket.id,\r\n          senderSocketID: socketID,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    pc.ontrack = (e) => {\r\n      console.log(\"ontrack success\");\r\n      setUsers((oldUsers) => oldUsers.filter((user) => user.id !== socketID));\r\n      setUsers((oldUsers) => [\r\n        ...oldUsers,\r\n        {\r\n          id: socketID,\r\n          stream: e.streams[0],\r\n        },\r\n      ]);\r\n    };\r\n\r\n    // return pc\r\n    return pc;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"Video_wrapper\">\r\n        {console.log(users.length)}\r\n        <div className=\"Video_Host_Container\">\r\n          {/* <div className=\"video-overlay \"> The Attendee Name </div> */}\r\n          <video muted={mic} ref={localVideoRef} autoPlay></video>\r\n          {users.length > 0\r\n            ? users.map((user, index) => {\r\n                return <Video key={index} stream={user.stream} muted={mic} />;\r\n              })\r\n            : null}\r\n        </div>\r\n      </section>\r\n      <ChatNavigation\r\n        senders={senders}\r\n        setHide={handleClose}\r\n        Hide={Hide}\r\n        micMuted={mic}\r\n        setMicMuted={handleMic}\r\n        checkVideo={isVideoOn}\r\n        setCheckVideo={handleVideo}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Login\\Login.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Nav bar\\Navigation.component.tsx",["199"],"import React, { useState } from \"react\";\r\nimport { ReactComponent as Logo } from \"../../Assets/Logo/vr-cardboard-solid.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navigation.styles.css\";\r\n\r\nconst Navigation: React.FC = (Props) => {\r\n  const [showNav, setShowNav] = useState(true);\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link className=\"logo-container\" to=\"/Landing\">\r\n        <Logo className=\"logo\" />\r\n      </Link>\r\n      <span className=\"logo-text\">Teacher's Lens</span>\r\n      <div className=\"options\">\r\n        {showNav ? (\r\n          <React.Fragment>\r\n            {/* <Link\r\n              className=\"option\"\r\n              to={\r\n                CurrentPath.location.pathname === \"/Join-Us\" ? \"/\" : \"/Join-Us\"\r\n              }\r\n            >\r\n              {CurrentPath.location.pathname === \"/Join-Us\"\r\n                ? \"LOGIN\"\r\n                : \"SIGNUP\"}\r\n            </Link> */}\r\n            <Link className=\"option\" to=\"#\">\r\n              CONTACT\r\n            </Link>\r\n            <Link className=\"option\" to=\"#\">\r\n              ABOUT\r\n            </Link>\r\n            <Link className=\"option\" to=\"#\">\r\n              TEACHER'S BLOG\r\n            </Link>\r\n          </React.Fragment>\r\n        ) : null}\r\n\r\n        {/* <ThreeLineHorizontal\r\n          size={24}\r\n          onClick={() => setShowNav(!showNav)}\r\n          style={{ transition: \"all ease 600ms\" }}\r\n        /> */}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\LandingPoster.animation.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\SignupPoster.animation.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\CustomButton\\CustomButton.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\ChatSidebar\\Chat.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Video\\index.tsx",["200","201"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\ninterface Props {\r\n  stream: MediaStream;\r\n  muted?: boolean;\r\n}\r\n\r\nconst Video = ({ stream, muted }: Props) => {\r\n  const ref = useRef<HTMLVideoElement>(null);\r\n  const [isMuted, setIsMuted] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) ref.current.srcObject = stream;\r\n    if (muted) setIsMuted(muted);\r\n  });\r\n\r\n  return (\r\n    // <div className=\"outerContainer\">\r\n    //   <div className=\"innerContainer\">\r\n    //     <div className=\"peerVideoOverlay\">Attendee Name</div>\r\n    <video ref={ref} muted={false} autoPlay controls></video>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Helpers\\Helpers.ts",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Home Page\\Home.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\Navigator.tsx",["202"],"import PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\n// material\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Link,\r\n  Button,\r\n  Drawer,\r\n  Typography,\r\n  Avatar,\r\n  Stack,\r\n} from \"@mui/material\";\r\n// mocks_\r\n// import account from \"../../_mocks_/account\";\r\n// hooks\r\nimport useResponsive from \"../../Hooks/useResponsive\";\r\n// components\r\n// import Logo from \"../../components/Logo\";\r\n// import Scrollbar from \"../../components/Scrollbar\";\r\nimport NavSection from \"../../Components/NavSection/NavSection\";\r\n//\r\nimport sidebarConfig from \"./sidebarConfig\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport safetyGoggles from \"@iconify/icons-mdi/safety-goggles\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 270;\r\n\r\nconst RootStyle = styled(\"div\")(({ theme }) => ({\r\n  [theme.breakpoints.up(\"lg\")]: {\r\n    flexShrink: 0,\r\n    width: DRAWER_WIDTH,\r\n  },\r\n}));\r\n\r\nconst AccountStyle = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface NavigatorProps {\r\n  isOpenSidebar: boolean;\r\n  onCloseSidebar: () => void;\r\n}\r\n\r\nexport default function Navigator({\r\n  isOpenSidebar,\r\n  onCloseSidebar,\r\n}: NavigatorProps) {\r\n  const { pathname } = useLocation();\r\n\r\n  const isDesktop = useResponsive(\"up\", \"sm\");\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          px: 2.5,\r\n          py: 3,\r\n          display: \"inline-flex\",\r\n          justifyContent: \"space-evenly\",\r\n        }}\r\n      >\r\n        <Icon icon={safetyGoggles} style={{ zoom: 2 }} />\r\n        <Typography variant=\"h6\" color=\"white\">\r\n          Teacher's Lens\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 5, mx: 2.5 }}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"#\">\r\n          <AccountStyle>\r\n            <Avatar alt=\"photoURL\" />\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: \"text.primary\" }}>\r\n                {\"Ulkesh Wani\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: \"text.primary\" }}>\r\n                {\"Admin\"}\r\n              </Typography>\r\n            </Box>\r\n          </AccountStyle>\r\n        </Link>\r\n      </Box>\r\n\r\n      <NavSection navConfig={sidebarConfig} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n\r\n      <Box sx={{ px: 2.5, pb: 3, mt: 10 }}>\r\n        <Stack\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n          sx={{ pt: 5, borderRadius: 2, position: \"relative\" }}\r\n        ></Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <RootStyle>\r\n      {!isDesktop && (\r\n        <Drawer\r\n          open={isOpenSidebar}\r\n          onClose={onCloseSidebar}\r\n          PaperProps={{\r\n            sx: { width: DRAWER_WIDTH },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n\r\n      {isDesktop && (\r\n        <Drawer\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: DRAWER_WIDTH,\r\n              bgcolor: \"#17252a\",\r\n              borderRightStyle: \"dashed\",\r\n              color: \"white\",\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  isOpenSidebar: PropTypes.bool,\r\n  onCloseSidebar: PropTypes.func,\r\n};\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Header\\Header.tsx",["203","204","205","206","207","208","209"],"import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Link from \"@mui/material/Link\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Model from \"Components/Custom Model/Model.component\";\r\nimport Content from \"Components/Content/Content\";\r\n\r\nconst lightColor = \"rgba(255, 255, 255, 0.7)\";\r\n\r\ninterface HeaderProps {\r\n  title?: string;\r\n  tabs?: any;\r\n  onTabChange?: any;\r\n  onTabChangeIndex?: any;\r\n  onTabChangeIndexValue?: any;\r\n  onDrawerToggle: () => void;\r\n  showRoomButton?: boolean;\r\n}\r\n\r\nexport default function Header(props: HeaderProps) {\r\n  const { onDrawerToggle } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleCustomModel = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Grid sx={{ display: { sm: \"none\", xs: \"block\" } }} item>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={onDrawerToggle}\r\n                edge=\"start\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" sx={{ p: 0.5 }}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n        sx={{ zIndex: 0 }}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                {props.title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Create Room\">\r\n                <IconButton color=\"inherit\">\r\n                  <VideoCallIcon />\r\n                  <Typography color=\"inherit\" variant=\"caption\">\r\n                    Create Room\r\n                  </Typography>\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        position=\"static\"\r\n        elevation={0}\r\n        sx={{ zIndex: 0 }}\r\n      ></AppBar>\r\n      <Model\r\n        open={open}\r\n        handleDialog={handleCustomModel}\r\n        title=\"Custom Model\"\r\n      ></Model>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\sidebarConfig.js",["210"],"// component\r\nimport { Icon } from \"@iconify/react\";\r\nimport accountWrench from \"@iconify/icons-mdi/account-wrench\";\r\nimport accountCog from \"@iconify/icons-mdi/account-cog\";\r\nimport viewDashboard from \"@iconify/icons-mdi/view-dashboard\";\r\nimport accountIcon from \"@iconify/icons-mdi/account\";\r\nimport accountGroup from \"@iconify/icons-mdi/account-group\";\r\nimport videoPlus from \"@iconify/icons-mdi/video-plus\";\r\nimport laptopAccount from \"@iconify/icons-mdi/laptop-account\";\r\nimport squareRoundedBadgeOutline from \"@iconify/icons-mdi/square-rounded-badge-outline\";\r\nimport officeBuildingCog from \"@iconify/icons-mdi/office-building-cog\";\r\n// ----------------------------------------------------------------------\r\n\r\nconst getIcon = (name) => <Icon icon={name} width={22} height={22} />;\r\n\r\nconst sidebarConfig = [\r\n  {\r\n    title: \"Dashboard\",\r\n    path: \"/dashboard\",\r\n    icon: getIcon(viewDashboard),\r\n  },\r\n  {\r\n    title: \"Administration\",\r\n    path: \"/dashboard/administration\",\r\n    icon: getIcon(accountWrench),\r\n    children: [\r\n      {\r\n        title: \"Organisation\",\r\n        path: \"/dashboard/administration/organisation\",\r\n        icon: getIcon(officeBuildingCog),\r\n      },\r\n      {\r\n        title: \"School / College\",\r\n        path: \"/dashboard/administration/school\",\r\n        icon: getIcon(officeBuildingCog),\r\n      },\r\n      {\r\n        title: \"Users\",\r\n        path: \"/dashboard/administration/user\",\r\n        icon: getIcon(accountGroup),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Create Conversation\",\r\n    path: \"/dashboard/create-conversation\",\r\n    icon: getIcon(videoPlus),\r\n  },\r\n  {\r\n    title: \"Join Conversation\",\r\n    path: \"/dashboard/join-conversation\",\r\n    icon: getIcon(laptopAccount),\r\n  },\r\n  {\r\n    title: \"Announcements & Notifications\",\r\n    path: \"/dashboard/announcements\",\r\n    icon: getIcon(squareRoundedBadgeOutline),\r\n  },\r\n  {\r\n    title: \"Profile\",\r\n    path: \"/dashboard/profile\",\r\n    icon: getIcon(accountIcon),\r\n  },\r\n];\r\n\r\nexport default sidebarConfig;\r\n",["211","212"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\NavSection.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Hooks\\useResponsive.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\Iconify.js",[],["213","214"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Custom Model\\Model.component.tsx",["215","216"],"import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\ninterface ModelProps {\r\n  children?: React.ReactChild;\r\n  open: boolean;\r\n  fullScreen?: boolean;\r\n  title?: string;\r\n  message?: string;\r\n  handleDialog: () => void;\r\n}\r\n\r\nconst Model = (props: ModelProps) => {\r\n  const { children } = props;\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleDialog}\r\n      fullScreen={props?.fullScreen}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle color=\"primary\">{props?.title}</DialogTitle>\r\n      <DialogContent dividers={true}>\r\n        <DialogContentText>{props?.message}</DialogContentText>\r\n        <Box sx={{ p: 1 }}>\r\n          {!children ? (\r\n            <Typography variant=\"body2\">No Data Found</Typography>\r\n          ) : (\r\n            children\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\utils\\theme.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Create Conversation\\Conversation.page.jsx",["217","218","219","220"],"import React from \"react\";\r\nimport { Button, useTheme } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { Container, Box, Typography, Grid } from \"@mui/material\";\r\nimport Header from \"Components/Header/Header\";\r\nimport Navigator from \"Components/Navigation2.0/Navigator\";\r\nimport { DrawerConstants } from \"utils/Constants\";\r\n\r\nconst Conversation = () => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const isSmUp = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleDrawerToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <Box sx={{ display: \"flex\", minHeight: \"100vh\" }}>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{\r\n          width: { sm: DrawerConstants.DRAWER_WIDTH },\r\n          flexShrink: { sm: 0 },\r\n        }}\r\n      >\r\n        {isSmUp ? null : (\r\n          <Navigator isOpenSidebar={open} onCloseSidebar={handleDrawerToggle} />\r\n        )}\r\n        <Navigator isOpenSidebar={open} onCloseSidebar={() => setOpen(false)} />\r\n      </Box>\r\n      <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Header\r\n          onDrawerToggle={handleDrawerToggle}\r\n          title=\"Create Conversations\"\r\n          showRoomButton\r\n        />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{ flex: 1, py: 6, px: 4, bgcolor: \"#eaeff1\" }}\r\n        ></Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Page.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\utils\\Constants.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Announcement\\Announcement.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Announcement & Notification\\Announcement.page.jsx",["221","222"],"import React from \"react\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { Container, Box, Typography, Grid } from \"@mui/material\";\r\nimport Header from \"Components/Header/Header\";\r\nimport Navigator from \"Components/Navigation2.0/Navigator\";\r\nimport { DrawerConstants } from \"utils/Constants\";\r\nimport Announcement from \"Components/Announcement/Announcement.component\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const isSmUp = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleDrawerToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <Box sx={{ display: \"flex\", minHeight: \"100vh\" }}>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{\r\n          width: { sm: DrawerConstants.DRAWER_WIDTH },\r\n          flexShrink: { sm: 0 },\r\n        }}\r\n      >\r\n        {isSmUp ? null : (\r\n          <Navigator isOpenSidebar={open} onCloseSidebar={handleDrawerToggle} />\r\n        )}\r\n        <Navigator isOpenSidebar={open} onCloseSidebar={() => setOpen(false)} />\r\n      </Box>\r\n      <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Header\r\n          onDrawerToggle={handleDrawerToggle}\r\n          title=\"Announcements & Notifications\"\r\n        />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{ flex: 1, py: 6, px: 4, bgcolor: \"#eaeff1\" }}\r\n        >\r\n          <Grid container spacing={3}>\r\n            {Array.from({ length: 6 }).map((_, index) => (\r\n              <Grid item xs={12} sm={6} md={4} lg={4} key={index}>\r\n                <Announcement />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Serverity-pills\\ServerityPills.component.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\CreateRoom\\CreateRoom.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\User\\User.page.jsx",["223"],"import * as React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Navigator from \"Components/Navigation2.0/Navigator\";\r\nimport Header from \"Components/Header/Header\";\r\nimport UserContent from \"Components/Content/UserContent\";\r\nimport UserInput from \"./UserInput.component\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/dashboard/app\">\r\n        Teacher's Lens\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}.\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 260;\r\n\r\nfunction User() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const isSmUp = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const UserSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .matches(\r\n        /^\\S+[A-Za-z\\s]{2,15}$/,\r\n        \"First name should be 3 to 15 character long and it should not start with blank space and not have special character and number.\"\r\n      )\r\n      .required(\"This field is required.\"),\r\n    lastName: Yup.string()\r\n      .matches(\r\n        /^\\S+[A-Za-z\\s]{2,15}$/,\r\n        \"Last name should be 3 to 15 character long and it should not start with blank space and not have special character and number.\"\r\n      )\r\n      .required(\"This field is required.\"),\r\n    email: Yup.string()\r\n      .email(\"Email must be a valid email address.\")\r\n      .matches(\r\n        /^[A_Za-z0-9_.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/,\r\n        \"Email must be a valid email address.\"\r\n      )\r\n      .required(\"This field is required.\"),\r\n    organisation: Yup.string().nullable().required(\"This field is required.\"),\r\n    role: Yup.string().nullable().required(\"This field is required.\"),\r\n    contactNumber: Yup.string()\r\n      .matches(/^[0-9]{10}$/, \"Invalid contact number.\")\r\n      .nullable()\r\n      .required(\"This field is required.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      organisation: null,\r\n      role: null,\r\n      contactNumber: null,\r\n    },\r\n    validationSchema: UserSchema,\r\n    onSubmit: async () => {},\r\n  });\r\n\r\n  const handleDrawerToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  console.log(formik);\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", minHeight: \"100vh\" }}>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{\r\n          width: { sm: drawerWidth },\r\n          flexShrink: { sm: 0 },\r\n        }}\r\n      >\r\n        {isSmUp ? null : (\r\n          <Navigator isOpenSidebar={open} onCloseSidebar={handleDrawerToggle} />\r\n        )}\r\n        <Navigator isOpenSidebar={open} onCloseSidebar={() => setOpen(false)} />\r\n      </Box>\r\n      <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Header onDrawerToggle={handleDrawerToggle} title=\"Users\" />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{ flex: 1, py: 6, px: 4, bgcolor: \"#eaeff1\" }}\r\n        >\r\n          <UserContent addButtonTitle=\"Add Users\" formikProps={formik} />\r\n        </Box>\r\n        <Box component=\"footer\" sx={{ p: 2, bgcolor: \"#000000\" }}>\r\n          <Copyright />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default User;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\User\\UserInput.component.jsx",["224","225","226"],"import React from \"react\";\r\nimport { FormikProvider, Form, Field } from \"formik\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Icon } from \"@iconify/react\";\r\n// import FileUpload from 'react-mui-fileuploader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nconst UserInput = ({\r\n  props,\r\n  handleDialog,\r\n  //   organisationData,\r\n  //   RolesData,\r\n}) => {\r\n  const {\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    getFieldProps,\r\n    resetForm,\r\n  } = props;\r\n  const validateVolunteerRejx = (event) => {\r\n    if (!/[0-9]/.test(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormikProvider value={props}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              placeholder=\"First Name\"\r\n              {...getFieldProps(\"firstName\")}\r\n              error={Boolean(touched.firstName && errors.firstName)}\r\n              helperText={touched.firstName && errors.firstName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              placeholder=\"Last Name\"\r\n              {...getFieldProps(\"lastName\")}\r\n              error={Boolean(touched.lastName && errors.lastName)}\r\n              helperText={touched.lastName && errors.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              {...getFieldProps(\"email\")}\r\n              error={Boolean(touched.email && errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel required id=\"organization-select-label\">\r\n                Select Organization\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"organization-select-label\"\r\n                required\r\n                label=\"Select Organization\"\r\n                id=\"select-origanization\"\r\n                {...getFieldProps(\"organisation\")}\r\n                error={Boolean(touched.organisation && errors.organisation)}\r\n                helperText={touched.organisation && errors.organisation}\r\n              >\r\n                {organisationData.map((org) => {\r\n                  const { organisation_id, organisation_name } = org;\r\n                  return (\r\n                    <MenuItem key={organisation_id} value={organisation_id}>\r\n                      {organisation_name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n              <FormHelperText sx={{ color: \"red\" }}>\r\n                {touched.organisation && errors.organisation}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel required id=\"organization-select-label\">\r\n                Select Role\r\n              </InputLabel>\r\n              <Select\r\n                required\r\n                labelId=\"role-select-label\"\r\n                label=\"Select Role\"\r\n                id=\"select-role\"\r\n                {...getFieldProps(\"role\")}\r\n                error={Boolean(touched.role && errors.role)}\r\n                helperText={touched.role && errors.role}\r\n              >\r\n                {RolesData.map((role) => {\r\n                  const { role_id, role_name } = role;\r\n                  return (\r\n                    <MenuItem key={role_id} value={role_id}>\r\n                      {role_name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n              <FormHelperText sx={{ color: \"red\" }}>\r\n                {touched.role && errors.role}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid> */}\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              type=\"number\"\r\n              placeholder=\"Mobile\"\r\n              {...getFieldProps(\"contactNumber\")}\r\n              onKeyPress={validateVolunteerRejx}\r\n              error={Boolean(touched.contactNumber && errors.contactNumber)}\r\n              helperText={touched.contactNumber && errors.contactNumber}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel\r\n                id=\"organization-select-label\"\r\n                sx={{ color: \"#a6a1a1\" }}\r\n              >\r\n                Select Role\r\n              </InputLabel>\r\n              <Select\r\n                required\r\n                labelId=\"role-select-label\"\r\n                label=\"Select Role\"\r\n                placeholder=\"Select Role\"\r\n                id=\"select-role\"\r\n                defaultValue=\"\"\r\n                {...getFieldProps(\"role\")}\r\n                error={Boolean(touched.role && errors.role)}\r\n                helperText={touched.role && errors.role}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Teacher\">Teacher</MenuItem>\r\n                <MenuItem value=\"Student\">Student</MenuItem>\r\n                <MenuItem value=\"Monitor\">Monitor</MenuItem>\r\n              </Select>\r\n              <FormHelperText sx={{ color: \"red\" }}>\r\n                {touched.role && errors.role}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Container\r\n          style={{ padding: 20, display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleDialog();\r\n              resetForm();\r\n            }}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            Cancel\r\n          </LoadingButton>\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            loading={isSubmitting}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            Add\r\n          </LoadingButton>\r\n        </Container>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\UserContent.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\School\\School.page.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\SchoolContent.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\School\\SchoolInput.component.jsx",["227","228","229"],"import React from \"react\";\r\nimport { FormikProvider, Form, Field } from \"formik\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Icon } from \"@iconify/react\";\r\n// import FileUpload from 'react-mui-fileuploader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nconst SchoolInput = ({\r\n  props,\r\n  handleDialog,\r\n  //   organisationData,\r\n  //   RolesData,\r\n}) => {\r\n  const {\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    getFieldProps,\r\n    resetForm,\r\n  } = props;\r\n  const validateVolunteerRejx = (event) => {\r\n    if (!/[0-9]/.test(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormikProvider value={props}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              placeholder=\"Name\"\r\n              {...getFieldProps(\"name\")}\r\n              error={Boolean(touched.name && errors.name)}\r\n              helperText={touched.name && errors.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              {...getFieldProps(\"email\")}\r\n              error={Boolean(touched.email && errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              type=\"number\"\r\n              placeholder=\"Mobile\"\r\n              {...getFieldProps(\"contactNumber\")}\r\n              onKeyPress={validateVolunteerRejx}\r\n              error={Boolean(touched.contactNumber && errors.contactNumber)}\r\n              helperText={touched.contactNumber && errors.contactNumber}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              multiline\r\n              rows={3}\r\n              fullWidth\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              {...getFieldProps(\"address\")}\r\n              error={Boolean(touched.address && errors.address)}\r\n              helperText={touched.address && errors.address}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel\r\n                id=\"organization-select-label\"\r\n                sx={{ color: \"#a6a1a1\" }}\r\n              >\r\n                Select Organisation\r\n              </InputLabel>\r\n              <Select\r\n                required\r\n                labelId=\"organisation-select-label\"\r\n                label=\"Select Organisation\"\r\n                placeholder=\"Select Organisation\"\r\n                id=\"select-organisation\"\r\n                defaultValue=\"\"\r\n                {...getFieldProps(\"organisation\")}\r\n                error={Boolean(touched.organisation && errors.organisation)}\r\n                helperText={touched.organisation && errors.organisation}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"JSPM\">JSPM</MenuItem>\r\n                <MenuItem value=\"PCCOE\">PCCOE</MenuItem>\r\n                <MenuItem value=\"DYPATIL\">Dr.DY Patil</MenuItem>\r\n              </Select>\r\n              <FormHelperText sx={{ color: \"red\" }}>\r\n                {touched.role && errors.role}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Container\r\n          style={{ padding: 20, display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleDialog();\r\n              resetForm();\r\n            }}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            Cancel\r\n          </LoadingButton>\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            loading={isSubmitting}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            Add\r\n          </LoadingButton>\r\n        </Container>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default SchoolInput;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\Organisation\\Organisation.page.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\OrganisationContent.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Administration\\Organisation\\OrganisationInput.component.jsx",["230","231","232","233","234","235","236","237"],"import React from \"react\";\r\nimport { FormikProvider, Form, Field } from \"formik\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Icon } from \"@iconify/react\";\r\n// import FileUpload from 'react-mui-fileuploader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Container,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nconst OrganisationInput = ({ props, handleDialog }) => {\r\n  const {\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    getFieldProps,\r\n    resetForm,\r\n  } = props;\r\n\r\n  const validateVolunteerRejx = (event) => {\r\n    if (!/[0-9]/.test(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormikProvider value={props}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              placeholder=\"Name\"\r\n              {...getFieldProps(\"name\")}\r\n              error={Boolean(touched.name && errors.name)}\r\n              helperText={touched.name && errors.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              {...getFieldProps(\"email\")}\r\n              error={Boolean(touched.email && errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              type=\"number\"\r\n              placeholder=\"Mobile\"\r\n              {...getFieldProps(\"contactNumber\")}\r\n              onKeyPress={validateVolunteerRejx}\r\n              error={Boolean(touched.contactNumber && errors.contactNumber)}\r\n              helperText={touched.contactNumber && errors.contactNumber}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              multiline\r\n              rows={3}\r\n              fullWidth\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              {...getFieldProps(\"address\")}\r\n              error={Boolean(touched.address && errors.address)}\r\n              helperText={touched.address && errors.address}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Container\r\n          style={{ padding: 20, display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleDialog();\r\n              resetForm();\r\n            }}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            Cancel\r\n          </LoadingButton>\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            loading={isSubmitting}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            Add\r\n          </LoadingButton>\r\n        </Container>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default OrganisationInput;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Profile\\Profile.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\ProfileContent.jsx",["238","239","240"],"import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  subtitle,\r\n} from \"@mui/material\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst ProfileContent = () => {\r\n  return (\r\n    <Card>\r\n      <CardContent\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src=\"/static/mock-image/avatars/avatar_23.jpg\"\r\n            sx={{\r\n              height: 64,\r\n              mb: 2,\r\n              width: 64,\r\n              borderRadius: 3,\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              paddingLeft: 2,\r\n            }}\r\n          >\r\n            <Typography gutterBottom variant=\"h6\">\r\n              Name: Ulkesh Wani\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"subtitle\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              Organisation: JSPM\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Chip label={\"Admin\"} color=\"primary\" />\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileContent;\r\n",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":24},{"ruleId":"245","severity":1,"message":"249","line":14,"column":10,"nodeType":"247","messageId":"248","endLine":14,"endColumn":16},{"ruleId":"245","severity":1,"message":"250","line":18,"column":15,"nodeType":"247","messageId":"248","endLine":18,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":142,"column":23,"nodeType":"247","endLine":142,"endColumn":29},{"ruleId":"251","severity":1,"message":"253","line":144,"column":18,"nodeType":"254","endLine":144,"endColumn":68},{"ruleId":"245","severity":1,"message":"255","line":8,"column":19,"nodeType":"247","messageId":"248","endLine":8,"endColumn":29},{"ruleId":"245","severity":1,"message":"256","line":11,"column":10,"nodeType":"247","messageId":"248","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"257","line":13,"column":3,"nodeType":"247","endLine":13,"endColumn":12,"suggestions":"258"},{"ruleId":"245","severity":1,"message":"259","line":9,"column":3,"nodeType":"247","messageId":"248","endLine":9,"endColumn":9},{"ruleId":"245","severity":1,"message":"259","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"245","severity":1,"message":"260","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":16},{"ruleId":"245","severity":1,"message":"261","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":12},{"ruleId":"245","severity":1,"message":"262","line":12,"column":8,"nodeType":"247","messageId":"248","endLine":12,"endColumn":11},{"ruleId":"245","severity":1,"message":"263","line":13,"column":8,"nodeType":"247","messageId":"248","endLine":13,"endColumn":12},{"ruleId":"245","severity":1,"message":"264","line":18,"column":8,"nodeType":"247","messageId":"248","endLine":18,"endColumn":15},{"ruleId":"245","severity":1,"message":"265","line":20,"column":7,"nodeType":"247","messageId":"248","endLine":20,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":18},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"241","replacedBy":"268"},{"ruleId":"243","replacedBy":"269"},{"ruleId":"245","severity":1,"message":"270","line":4,"column":3,"nodeType":"247","messageId":"248","endLine":4,"endColumn":16},{"ruleId":"245","severity":1,"message":"259","line":8,"column":3,"nodeType":"247","messageId":"248","endLine":8,"endColumn":9},{"ruleId":"266","severity":1,"message":"259","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":16},{"ruleId":"266","severity":1,"message":"271","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":19},{"ruleId":"266","severity":1,"message":"272","line":4,"column":26,"nodeType":"247","messageId":"248","endLine":4,"endColumn":36},{"ruleId":"266","severity":1,"message":"273","line":4,"column":38,"nodeType":"247","messageId":"248","endLine":4,"endColumn":42},{"ruleId":"266","severity":1,"message":"271","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":19},{"ruleId":"266","severity":1,"message":"272","line":4,"column":26,"nodeType":"247","messageId":"248","endLine":4,"endColumn":36},{"ruleId":"266","severity":1,"message":"274","line":12,"column":8,"nodeType":"247","messageId":"248","endLine":12,"endColumn":17},{"ruleId":"266","severity":1,"message":"275","line":2,"column":32,"nodeType":"247","messageId":"248","endLine":2,"endColumn":37},{"ruleId":"266","severity":1,"message":"276","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":20},{"ruleId":"266","severity":1,"message":"277","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"275","line":2,"column":32,"nodeType":"247","messageId":"248","endLine":2,"endColumn":37},{"ruleId":"266","severity":1,"message":"276","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":20},{"ruleId":"266","severity":1,"message":"277","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"275","line":2,"column":32,"nodeType":"247","messageId":"248","endLine":2,"endColumn":37},{"ruleId":"266","severity":1,"message":"276","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":20},{"ruleId":"266","severity":1,"message":"277","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"278","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":10,"endColumn":17},{"ruleId":"266","severity":1,"message":"279","line":11,"column":3,"nodeType":"247","messageId":"248","endLine":11,"endColumn":11},{"ruleId":"266","severity":1,"message":"280","line":12,"column":3,"nodeType":"247","messageId":"248","endLine":12,"endColumn":9},{"ruleId":"266","severity":1,"message":"281","line":13,"column":3,"nodeType":"247","messageId":"248","endLine":13,"endColumn":13},{"ruleId":"266","severity":1,"message":"282","line":14,"column":3,"nodeType":"247","messageId":"248","endLine":14,"endColumn":14},{"ruleId":"266","severity":1,"message":"259","line":4,"column":3,"nodeType":"247","messageId":"248","endLine":4,"endColumn":9},{"ruleId":"266","severity":1,"message":"283","line":6,"column":3,"nodeType":"247","messageId":"248","endLine":6,"endColumn":14},{"ruleId":"266","severity":1,"message":"284","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":10,"endColumn":11},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"@typescript-eslint/no-unused-vars","'ChatNavigation' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","'setMic' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'localStream' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'sendPC' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setShowNav' is assigned a value but never used.","'isMuted' is assigned a value but never used.","React Hook useEffect contains a call to 'setIsMuted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stream, muted] as a second argument to the useEffect Hook.",["287"],"'Button' is defined but never used.","'HelpIcon' is defined but never used.","'Link' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Content' is defined but never used.","'lightColor' is assigned a value but never used.","no-unused-vars","'accountCog' is defined but never used.",["285"],["286"],"'DialogActions' is defined but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'UserInput' is defined but never used.","'Field' is defined but never used.","'makeStyles' is defined but never used.","'Icon' is defined but never used.","'FormHelperText' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'CardActions' is defined but never used.","'subtitle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},"Add dependencies array: [stream, muted]",{"range":"290","text":"291"},[422,422],", [stream, muted]"]