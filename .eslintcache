[{"D:\\React\\Teacher's Lens\\Client\\src\\index.tsx":"1","D:\\React\\Teacher's Lens\\Client\\src\\Components\\App.tsx":"2","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Sign-Up Page\\SignupPage.page.tsx":"3","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Landing Page\\Landing.page.tsx":"4","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Meeting Page\\MeetPage.pages.tsx":"5","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Footer\\Footer.component.tsx":"6","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Signup\\Signup.component.tsx":"7","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Room\\Room.tsx":"8","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Login\\Login.component.tsx":"9","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Nav bar\\Navigation.component.tsx":"10","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\LandingPoster.animation.tsx":"11","D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\SignupPoster.animation.tsx":"12","D:\\React\\Teacher's Lens\\Client\\src\\Components\\CustomButton\\CustomButton.component.tsx":"13","D:\\React\\Teacher's Lens\\Client\\src\\Components\\ChatSidebar\\Chat.component.tsx":"14","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Video\\index.tsx":"15","D:\\React\\Teacher's Lens\\Client\\src\\Helpers\\Helpers.ts":"16","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Home Page\\Home.component.tsx":"17","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\Navigator.tsx":"18","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Header\\Header.tsx":"19","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\Content.tsx":"20","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\sidebarConfig.js":"21","D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\NavSection.js":"22","D:\\React\\Teacher's Lens\\Client\\src\\Hooks\\useResponsive.js":"23","D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\Iconify.js":"24","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Custom Model\\Model.component.tsx":"25","D:\\React\\Teacher's Lens\\Client\\src\\utils\\theme.js":"26","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Create Conversation\\Conversation.page.jsx":"27","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Page.jsx":"28","D:\\React\\Teacher's Lens\\Client\\src\\utils\\Constants.js":"29","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Announcement\\Announcement.component.tsx":"30","D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Announcement & Notification\\Announcement.page.jsx":"31","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Serverity-pills\\ServerityPills.component.jsx":"32"},{"size":458,"mtime":1630683597703,"results":"33","hashOfConfig":"34"},{"size":1405,"mtime":1649100453648,"results":"35","hashOfConfig":"34"},{"size":805,"mtime":1631864039743,"results":"36","hashOfConfig":"34"},{"size":802,"mtime":1631865791438,"results":"37","hashOfConfig":"34"},{"size":599,"mtime":1635840578148,"results":"38","hashOfConfig":"34"},{"size":404,"mtime":1631890406730,"results":"39","hashOfConfig":"34"},{"size":2107,"mtime":1648901481462,"results":"40","hashOfConfig":"34"},{"size":8711,"mtime":1635922467535,"results":"41","hashOfConfig":"34"},{"size":2103,"mtime":1648964523130,"results":"42","hashOfConfig":"34"},{"size":1600,"mtime":1631863632688,"results":"43","hashOfConfig":"34"},{"size":507,"mtime":1631612719308,"results":"44","hashOfConfig":"34"},{"size":492,"mtime":1632213302757,"results":"45","hashOfConfig":"34"},{"size":417,"mtime":1648964467510,"results":"46","hashOfConfig":"34"},{"size":4177,"mtime":1635923599943,"results":"47","hashOfConfig":"34"},{"size":720,"mtime":1635841880144,"results":"48","hashOfConfig":"34"},{"size":394,"mtime":1635495985182,"results":"49","hashOfConfig":"34"},{"size":1804,"mtime":1649097679762,"results":"50","hashOfConfig":"34"},{"size":3791,"mtime":1649100506630,"results":"51","hashOfConfig":"34"},{"size":3495,"mtime":1649101876090,"results":"52","hashOfConfig":"34"},{"size":2001,"mtime":1649090588803,"results":"53","hashOfConfig":"34"},{"size":1741,"mtime":1649096933402,"results":"54","hashOfConfig":"34"},{"size":4949,"mtime":1649096347904,"results":"55","hashOfConfig":"34"},{"size":816,"mtime":1648905960645,"results":"56","hashOfConfig":"34"},{"size":472,"mtime":1648905762257,"results":"57","hashOfConfig":"34"},{"size":1032,"mtime":1649090408726,"results":"58","hashOfConfig":"34"},{"size":3006,"mtime":1649097783332,"results":"59","hashOfConfig":"34"},{"size":1456,"mtime":1649101466872,"results":"60","hashOfConfig":"34"},{"size":560,"mtime":1649098550438,"results":"61","hashOfConfig":"34"},{"size":60,"mtime":1649099172596,"results":"62","hashOfConfig":"34"},{"size":1038,"mtime":1649100934490,"results":"63","hashOfConfig":"34"},{"size":1786,"mtime":1649101221580,"results":"64","hashOfConfig":"34"},{"size":1282,"mtime":1649100712995,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1bfvjp8",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"D:\\React\\Teacher's Lens\\Client\\src\\index.tsx",[],["137","138"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\App.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Sign-Up Page\\SignupPage.page.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Landing Page\\Landing.page.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Meeting Page\\MeetPage.pages.tsx",["139"],"import * as React from \"react\";\r\nimport { ChatNavigation } from \"Components/ChatSidebar/Chat.component\";\r\nimport Room from \"Components/Room/Room\";\r\n\r\nimport \"./MeetPage.styles.css\";\r\n\r\ntype UserCallProps = {\r\n  roomID?: string;\r\n};\r\n\r\nclass MeetPage extends React.Component<UserCallProps> {\r\n  state: UserCallProps = {\r\n    roomID: this.props.roomID,\r\n  };\r\n  render() {\r\n    return (\r\n      <section className=\"Meet_Wrapper\">\r\n        <div className=\"Meet_callContainer\">\r\n          <Room roomID={this.state.roomID} />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MeetPage;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Footer\\Footer.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Signup\\Signup.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Room\\Room.tsx",["140","141","142","143"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Video from \"Components/Video\";\r\n\r\nimport \"./Room.styles.css\";\r\nimport { ChatNavigation } from \"Components/ChatSidebar/Chat.component\";\r\n\r\ntype CallProperties = {\r\n  roomID?: string;\r\n};\r\n\r\nconst Room = ({ roomID }: CallProperties) => {\r\n  const localUuid: string = roomID as string;\r\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\r\n  const [users, setUsers] = useState<Array<IWebRTCUser>>([]);\r\n  const senders = useRef<Array<RTCRtpSender>>([]);\r\n  const [Hide, setHide] = useState(false);\r\n  const [mic, setMic] = useState(false);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n\r\n  const handleVideo = () => {\r\n    setIsVideoOn(!isVideoOn);\r\n  };\r\n\r\n  const handleMic = () => {\r\n    setIsVideoOn(!mic);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setHide(!Hide);\r\n  };\r\n\r\n  let localVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  let sendPC: RTCPeerConnection;\r\n  let receivePCs: { [socketId: string]: RTCPeerConnection };\r\n  let localStream: MediaStream;\r\n\r\n  const pc_config = {\r\n    iceServers: [\r\n      {\r\n        urls: \"stun:stun.l.google.com:19302\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newSocket = io.connect(\"ws://localhost:8080\");\r\n\r\n    newSocket.on(\"userEnter\", (data: { id: string }) => {\r\n      createReceivePC(data.id, newSocket);\r\n    });\r\n\r\n    newSocket.on(\"allUsers\", (data: { users: Array<{ id: string }> }) => {\r\n      let len = data.users.length;\r\n      for (let i = 0; i < len; i++) {\r\n        createReceivePC(data.users[i].id, newSocket);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"userExit\", (data: { id: string }) => {\r\n      receivePCs[data.id].close();\r\n      delete receivePCs[data.id];\r\n      setUsers((users) => users.filter((user) => user.id !== data.id));\r\n    });\r\n\r\n    newSocket.on(\r\n      \"getSenderAnswer\",\r\n      async (data: { sdp: RTCSessionDescription }) => {\r\n        try {\r\n          console.log(\"get sender answer\");\r\n          console.log(data.sdp);\r\n          await sendPC.setRemoteDescription(\r\n            new RTCSessionDescription(data.sdp)\r\n          );\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getSenderCandidate\",\r\n      async (data: { candidate: RTCIceCandidateInit }) => {\r\n        try {\r\n          console.log(\"get sender candidate\");\r\n          if (!data.candidate) return;\r\n          sendPC.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          console.log(\"candidate add success\");\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getReceiverAnswer\",\r\n      async (data: { id: string; sdp: RTCSessionDescription }) => {\r\n        try {\r\n          console.log(`get socketID(${data.id})'s answer`);\r\n          let pc: RTCPeerConnection = receivePCs[data.id];\r\n          await pc.setRemoteDescription(data.sdp);\r\n          console.log(`socketID(${data.id})'s set remote sdp success`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    newSocket.on(\r\n      \"getReceiverCandidate\",\r\n      async (data: { id: string; candidate: RTCIceCandidateInit }) => {\r\n        try {\r\n          console.log(data);\r\n          console.log(`get socketID(${data.id})'s candidate`);\r\n          let pc: RTCPeerConnection = receivePCs[data.id];\r\n          if (!data.candidate) return;\r\n          pc.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n          console.log(`socketID(${data.id})'s candidate add success`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    setSocket(newSocket);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        audio: mic,\r\n        video: isVideoOn\r\n          ? {\r\n              width: { min: 640, ideal: 1280, max: 1920 },\r\n              height: { min: 480, ideal: 720, max: 1080 },\r\n              frameRate: { max: 59 },\r\n            }\r\n          : false,\r\n      })\r\n      .then((stream) => {\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n\r\n        localStream = stream;\r\n\r\n        sendPC = createSenderPeerConnection(newSocket, localStream);\r\n        createSenderOffer(newSocket);\r\n\r\n        newSocket.emit(\"joinRoom\", {\r\n          id: newSocket.id,\r\n          roomID: localUuid,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`getUserMedia error: ${error}`);\r\n      });\r\n  }, []);\r\n\r\n  const createReceivePC = (id: string, newSocket: SocketIOClient.Socket) => {\r\n    try {\r\n      console.log(`socketID(${id}) user entered`);\r\n      let pc = createReceiverPeerConnection(id, newSocket);\r\n      createReceiverOffer(pc, newSocket, id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //Create Offer\r\n  const createSenderOffer = async (newSocket: SocketIOClient.Socket) => {\r\n    try {\r\n      let sdp = await sendPC.createOffer({\r\n        offerToReceiveAudio: false,\r\n        offerToReceiveVideo: false,\r\n      });\r\n      console.log(\"create sender offer success\");\r\n      await sendPC.setLocalDescription(new RTCSessionDescription(sdp));\r\n\r\n      newSocket.emit(\"senderOffer\", {\r\n        sdp,\r\n        senderSocketID: newSocket.id,\r\n        roomID: localUuid,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createReceiverOffer = async (\r\n    pc: RTCPeerConnection,\r\n    newSocket: SocketIOClient.Socket,\r\n    senderSocketID: string\r\n  ) => {\r\n    try {\r\n      let sdp = await pc.createOffer({\r\n        offerToReceiveAudio: true,\r\n        offerToReceiveVideo: true,\r\n      });\r\n      console.log(\"create receiver offer success\");\r\n      await pc.setLocalDescription(new RTCSessionDescription(sdp));\r\n\r\n      newSocket.emit(\"receiverOffer\", {\r\n        sdp,\r\n        receiverSocketID: newSocket.id,\r\n        senderSocketID,\r\n        roomID: localUuid,\r\n      });\r\n      console.log(senderSocketID);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //callUser\r\n  const createSenderPeerConnection = (\r\n    newSocket: SocketIOClient.Socket,\r\n    localStream: MediaStream\r\n  ): RTCPeerConnection => {\r\n    let pc = new RTCPeerConnection(pc_config);\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log(\"sender PC onicecandidate\");\r\n        newSocket.emit(\"senderCandidate\", {\r\n          candidate: e.candidate,\r\n          senderSocketID: newSocket.id,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    if (localStream) {\r\n      console.log(\"localstream add\");\r\n      localStream.getTracks().forEach((track) => {\r\n        senders.current.push(pc.addTrack(track, localStream));\r\n      });\r\n    } else {\r\n      console.log(\"no local stream\");\r\n    }\r\n    // return pc\r\n    return pc;\r\n  };\r\n\r\n  const createReceiverPeerConnection = (\r\n    socketID: string,\r\n    newSocket: SocketIOClient.Socket\r\n  ): RTCPeerConnection => {\r\n    let pc = new RTCPeerConnection(pc_config);\r\n\r\n    // add pc to peerConnections object\r\n    receivePCs = { ...receivePCs, [socketID]: pc };\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log(\"receiver PC onicecandidate\");\r\n        newSocket.emit(\"receiverCandidate\", {\r\n          candidate: e.candidate,\r\n          receiverSocketID: newSocket.id,\r\n          senderSocketID: socketID,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    pc.ontrack = (e) => {\r\n      console.log(\"ontrack success\");\r\n      setUsers((oldUsers) => oldUsers.filter((user) => user.id !== socketID));\r\n      setUsers((oldUsers) => [\r\n        ...oldUsers,\r\n        {\r\n          id: socketID,\r\n          stream: e.streams[0],\r\n        },\r\n      ]);\r\n    };\r\n\r\n    // return pc\r\n    return pc;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"Video_wrapper\">\r\n        {console.log(users.length)}\r\n        <div className=\"Video_Host_Container\">\r\n          {/* <div className=\"video-overlay \"> The Attendee Name </div> */}\r\n          <video muted={mic} ref={localVideoRef} autoPlay></video>\r\n          {users.length > 0\r\n            ? users.map((user, index) => {\r\n                return <Video key={index} stream={user.stream} muted={mic} />;\r\n              })\r\n            : null}\r\n        </div>\r\n      </section>\r\n      <ChatNavigation\r\n        senders={senders}\r\n        setHide={handleClose}\r\n        Hide={Hide}\r\n        micMuted={mic}\r\n        setMicMuted={handleMic}\r\n        checkVideo={isVideoOn}\r\n        setCheckVideo={handleVideo}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Components\\Login\\Login.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Nav bar\\Navigation.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\LandingPoster.animation.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Assets\\Aminated posters\\SignupPoster.animation.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\CustomButton\\CustomButton.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\ChatSidebar\\Chat.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Video\\index.tsx",["144","145"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\ninterface Props {\r\n  stream: MediaStream;\r\n  muted?: boolean;\r\n}\r\n\r\nconst Video = ({ stream, muted }: Props) => {\r\n  const ref = useRef<HTMLVideoElement>(null);\r\n  const [isMuted, setIsMuted] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) ref.current.srcObject = stream;\r\n    if (muted) setIsMuted(muted);\r\n  });\r\n\r\n  return (\r\n    // <div className=\"outerContainer\">\r\n    //   <div className=\"innerContainer\">\r\n    //     <div className=\"peerVideoOverlay\">Attendee Name</div>\r\n    <video ref={ref} muted={false} autoPlay controls></video>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\Helpers\\Helpers.ts",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Home Page\\Home.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\Navigator.tsx",["146"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Header\\Header.tsx",["147","148","149","150","151","152","153"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Content\\Content.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Navigation2.0\\sidebarConfig.js",[],["154","155"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\NavSection.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Hooks\\useResponsive.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\NavSection\\Iconify.js",[],["156","157"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Custom Model\\Model.component.tsx",["158","159"],"import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\ninterface ModelProps {\r\n  children?: React.ReactChild;\r\n  open: boolean;\r\n  fullScreen?: boolean;\r\n  title?: string;\r\n  message?: string;\r\n  handleDialog: () => void;\r\n}\r\n\r\nconst Model = (props: ModelProps) => {\r\n  const { children } = props;\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleDialog}\r\n      fullScreen={props?.fullScreen}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle color=\"primary\">{props?.title}</DialogTitle>\r\n      <DialogContent dividers={true}>\r\n        <DialogContentText>{props?.message}</DialogContentText>\r\n        <Box sx={{ p: 1 }}>\r\n          {!children ? (\r\n            <Typography variant=\"body2\">No Data Found</Typography>\r\n          ) : (\r\n            children\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","D:\\React\\Teacher's Lens\\Client\\src\\utils\\theme.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Create Conversation\\Conversation.page.jsx",["160","161","162","163"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Page.jsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\utils\\Constants.js",[],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Announcement\\Announcement.component.tsx",[],"D:\\React\\Teacher's Lens\\Client\\src\\Pages\\Announcement & Notification\\Announcement.page.jsx",["164","165"],"D:\\React\\Teacher's Lens\\Client\\src\\Components\\Serverity-pills\\ServerityPills.component.jsx",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":24},{"ruleId":"170","severity":1,"message":"174","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":16},{"ruleId":"170","severity":1,"message":"175","line":18,"column":15,"nodeType":"172","messageId":"173","endLine":18,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":142,"column":23,"nodeType":"172","endLine":142,"endColumn":29},{"ruleId":"176","severity":1,"message":"178","line":144,"column":18,"nodeType":"179","endLine":144,"endColumn":68},{"ruleId":"170","severity":1,"message":"180","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":17},{"ruleId":"176","severity":1,"message":"181","line":13,"column":3,"nodeType":"172","endLine":13,"endColumn":12,"suggestions":"182"},{"ruleId":"170","severity":1,"message":"183","line":9,"column":3,"nodeType":"172","messageId":"173","endLine":9,"endColumn":9},{"ruleId":"170","severity":1,"message":"183","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"184","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":16},{"ruleId":"170","severity":1,"message":"185","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":12},{"ruleId":"170","severity":1,"message":"186","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":11},{"ruleId":"170","severity":1,"message":"187","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":12},{"ruleId":"170","severity":1,"message":"188","line":18,"column":8,"nodeType":"172","messageId":"173","endLine":18,"endColumn":15},{"ruleId":"170","severity":1,"message":"189","line":20,"column":7,"nodeType":"172","messageId":"173","endLine":20,"endColumn":17},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"190"},{"ruleId":"168","replacedBy":"191"},{"ruleId":"170","severity":1,"message":"192","line":4,"column":3,"nodeType":"172","messageId":"173","endLine":4,"endColumn":16},{"ruleId":"170","severity":1,"message":"183","line":8,"column":3,"nodeType":"172","messageId":"173","endLine":8,"endColumn":9},{"ruleId":"193","severity":1,"message":"183","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":19},{"ruleId":"193","severity":1,"message":"195","line":4,"column":26,"nodeType":"172","messageId":"173","endLine":4,"endColumn":36},{"ruleId":"193","severity":1,"message":"196","line":4,"column":38,"nodeType":"172","messageId":"173","endLine":4,"endColumn":42},{"ruleId":"193","severity":1,"message":"194","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":19},{"ruleId":"193","severity":1,"message":"195","line":4,"column":26,"nodeType":"172","messageId":"173","endLine":4,"endColumn":36},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-unused-vars","'ChatNavigation' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","'setMic' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'localStream' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'sendPC' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'isMuted' is assigned a value but never used.","React Hook useEffect contains a call to 'setIsMuted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stream, muted] as a second argument to the useEffect Hook.",["199"],"'Button' is defined but never used.","'HelpIcon' is defined but never used.","'Link' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Content' is defined but never used.","'lightColor' is assigned a value but never used.",["197"],["198"],"'DialogActions' is defined but never used.","no-unused-vars","'Container' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Add dependencies array: [stream, muted]",{"range":"202","text":"203"},[422,422],", [stream, muted]"]